$date
   Thu Jun 20 10:40:41 2024
$end
$version
  2018.3
$end
$timescale
  1ps
$end
$scope module modulus_tb $end
$var reg 1 ! clock $end
$var reg 1 " enable $end
$var reg 1 # reset $end
$var reg 16 $ i [15:0] $end
$var reg 16 % q [15:0] $end
$var reg 1 & input_valid $end
$var wire 16 ' mag [15:0] $end
$var wire 1 ( mag_stb $end
$var parameter 32 ) DATA_WIDTH [31:0] $end
$scope module dut $end
$var wire 1 * clock $end
$var wire 1 + reset $end
$var wire 1 , ivalid $end
$var wire 16 - i [15:0] $end
$var wire 16 . q [15:0] $end
$var wire 1 ( ovalid $end
$var reg 16 / modulus [15:0] $end
$var reg 16 0 abs_i [15:0] $end
$var reg 16 1 abs_q [15:0] $end
$var reg 16 2 max [15:0] $end
$var reg 16 3 min [15:0] $end
$var reg 3 4 ovalid_buf [2:0] $end
$var parameter 32 5 WIDTH [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
1#
b0 $
b0 %
0&
bx '
0(
b10000 )
0*
1+
0,
b0 -
b0 .
bx /
b0 0
b0 1
bx 2
bx 3
b0 4
b10000 5
$end
#5000
1!
1*
bx /
b0 2
b0 3
#10000
0!
1"
0#
0*
0+
#15000
1!
b0 '
1*
b0 /
#20000
0!
b100 $
b11 %
1&
0*
1,
b100 -
b11 .
#25000
1!
1*
b100 0
b11 1
b1 4
#30000
0!
0&
0*
0,
#35000
1!
1*
b100 2
b11 3
b10 4
#40000
0!
0*
#45000
1!
b100 '
1(
1*
b100 /
b100 4
#50000
0!
0*
#55000
1!
0(
1*
b0 4
#60000
0!
0*
#65000
1!
1*
#70000
0!
b1111111111111000 $
b111 %
1&
0*
1,
b1111111111111000 -
b111 .
#75000
1!
1*
b1000 0
b111 1
b1 4
#80000
0!
0&
0*
0,
#85000
1!
1*
b1000 2
b111 3
b10 4
#90000
0!
0*
#95000
1!
b1001 '
1(
1*
b1001 /
b100 4
#100000
0!
0*
#105000
1!
0(
1*
b0 4
#110000
0!
0*
#115000
1!
1*
#120000
0!
b10 $
b1111111111111101 %
1&
0*
1,
b10 -
b1111111111111101 .
#125000
1!
1*
b10 0
b11 1
b1 4
#130000
0!
0&
0*
0,
#135000
1!
1*
b11 2
b10 3
b10 4
#140000
0!
0*
#145000
1!
b11 '
1(
1*
b11 /
b100 4
#150000
0!
0*
#155000
1!
0(
1*
b0 4
#160000
0!
0*
#165000
1!
1*
#170000
0!
0*
#175000
1!
1*
#180000
0!
0*
