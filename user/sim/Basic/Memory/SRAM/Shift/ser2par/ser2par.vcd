$date
   Thu Jun 27 22:28:13 2024
$end
$version
  2018.3
$end
$timescale
  1ps
$end
$scope module ser2par_tb $end
$var reg 1 ! clock $end
$var reg 1 " enable $end
$var reg 1 # reset $end
$var reg 1 $ ivalid $end
$var reg 1 % idata $end
$var wire 1 & ovalid $end
$var wire 8 ' odata [7:0] $end
$var wire 8 ( byte_out [7:0] $end
$var wire 1 ) output_valid $end
$scope module u_ser2par $end
$var wire 1 * clock $end
$var wire 1 + enable $end
$var wire 1 , reset $end
$var wire 1 - direct $end
$var wire 1 . ivalid $end
$var wire 1 / idata $end
$var reg 1 0 ovalid $end
$var reg 8 1 odata [7:0] $end
$var reg 8 2 data_buf [7:0] $end
$var reg 3 3 cnt [2:0] $end
$var parameter 32 4 LENGTH [31:0] $end
$upscope $end
$scope module u_bits_to_bytes $end
$var wire 1 5 clock $end
$var wire 1 6 enable $end
$var wire 1 7 reset $end
$var wire 1 8 bit_in $end
$var wire 1 9 input_strobe $end
$var reg 8 : byte_out [7:0] $end
$var reg 1 ; output_strobe $end
$var reg 8 < bit_buf [7:0] $end
$var reg 3 = addr [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
1#
0$
0%
0&
b0 '
bx (
x)
0*
0+
1,
0-
0.
0/
00
b0 1
b0 2
b0 3
b1000 4
05
06
17
08
09
bx :
x;
bx <
bx =
$end
#5000
1!
b0 (
0)
1*
1.
15
19
b0 :
0;
b0 <
b0 =
#10000
0!
1"
0#
1$
1%
0*
1+
0,
0.
1/
05
16
07
18
09
#15000
1!
1*
1.
b10000000 2
b1 3
15
19
b10000000 <
b1 =
#20000
0!
0%
0*
0.
0/
05
08
09
#25000
1!
1*
1.
b1000000 2
b10 3
15
19
b1000000 <
b10 =
#30000
0!
1%
0*
0.
1/
05
18
09
#35000
1!
1*
1.
b10100000 2
b11 3
15
19
b10100000 <
b11 =
#40000
0!
0%
0*
0.
0/
05
08
09
#45000
1!
1*
1.
b1010000 2
b100 3
15
19
b1010000 <
b100 =
#50000
0!
1%
0*
0.
1/
05
18
09
#55000
1!
1*
1.
b10101000 2
b101 3
15
19
b10101000 <
b101 =
#60000
0!
0%
0*
0.
0/
05
08
09
#65000
1!
1*
1.
b1010100 2
b110 3
15
19
b1010100 <
b110 =
#70000
0!
1%
0*
0.
1/
05
18
09
#75000
1!
1*
1.
b10101010 2
b111 3
15
19
b10101010 <
b111 =
#80000
0!
0*
0.
05
09
#85000
1!
1&
b11010101 '
b11010101 (
1)
1*
1.
10
b11010101 1
b11010101 2
b0 3
15
19
b11010101 :
1;
b11010101 <
b0 =
#90000
0!
0*
0.
05
09
#95000
1!
0&
0)
1*
1.
00
b11101010 2
b1 3
15
19
0;
b11101010 <
b1 =
#100000
0!
0%
0*
0.
0/
05
08
09
#105000
1!
1*
1.
b1110101 2
b10 3
15
19
b1110101 <
b10 =
#110000
0!
1%
0*
0.
1/
05
18
09
#115000
1!
1*
1.
b10111010 2
b11 3
15
19
b10111010 <
b11 =
#120000
0!
0*
0.
05
09
#125000
1!
1*
1.
b11011101 2
b100 3
15
19
b11011101 <
b100 =
#130000
0!
0*
0.
05
09
#135000
1!
1*
1.
b11101110 2
b101 3
15
19
b11101110 <
b101 =
#140000
0!
0%
0*
0.
0/
05
08
09
#145000
1!
1*
1.
b1110111 2
b110 3
15
19
b1110111 <
b110 =
#150000
0!
1%
0*
0.
1/
05
18
09
#155000
1!
1*
1.
b10111011 2
b111 3
15
19
b10111011 <
b111 =
#160000
0!
0*
0.
05
09
#165000
1!
1&
b11011101 '
b11011101 (
1)
1*
1.
10
b11011101 1
b11011101 2
b0 3
15
19
b11011101 :
1;
b11011101 <
b0 =
#170000
0!
0*
0.
05
09
#175000
1!
0&
0)
1*
1.
00
b11101110 2
b1 3
15
19
0;
b11101110 <
b1 =
#180000
0!
0*
0.
05
09
#185000
1!
1*
1.
b11110111 2
b10 3
15
19
b11110111 <
b10 =
